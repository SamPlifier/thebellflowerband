{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport StyleBase from '../components/StyleBase';\nimport React from 'react';\nimport axios from 'axios';\nimport NumberOfEvents from '../components/NumberOfEvents';\n\nclass Calendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      calendarEvents: [],\n      fetchError: false\n    });\n  }\n\n  componentDidMount() {\n    let now = new Date();\n    let startOfToday = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0);\n    let endOfDayOneMonthOut = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate(), 23, 59, 59);\n    axios.get('https://www.googleapis.com/calendar/v3/calendars/thebellflowerband%40gmail.com/events?key=AIzaSyA73ezNBuEPQSSjMgoMjfiFa5wwT1TJht8').then(res => {\n      let allEvents = res.data.items;\n      allEvents = allEvents.sort((a, b) => Date.parse(a.start.dateTime.toString()) > Date.parse(b.start.dateTime.toString()) ? 1 : -1);\n      let futureEvents = [];\n      allEvents.map((calEvent, i) => {\n        let eventTime = new Date(calEvent.start.dateTime);\n\n        if (eventTime > startOfToday && eventTime < endOfDayOneMonthOut) {\n          futureEvents.push(calEvent);\n        }\n\n        return true;\n      });\n      this.setState({\n        calendarEvents: futureEvents\n      });\n    }).catch(err => {\n      this.setState({\n        fetchError: true\n      });\n    });\n  }\n\n  date(utcDate, type) {\n    let date = new Date(utcDate);\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'Novermber', 'December'];\n    const dateMaker = {\n      get day() {\n        return days[date.getDay()];\n      },\n\n      get dayNum() {\n        return date.getDate();\n      },\n\n      get month() {\n        return months[date.getMonth()];\n      },\n\n      get year() {\n        return date.getFullYear();\n      },\n\n      get hour() {\n        return date.getHours();\n      },\n\n      get minute() {\n        return date.getMinutes();\n      },\n\n      get localTime() {\n        return date.toLocaleTimeString().slice(0, -6).concat(date.toLocaleTimeString().slice(-3));\n      }\n\n    };\n    let formattedDate;\n\n    switch (type) {\n      case 'day':\n        formattedDate = dateMaker.day;\n        break;\n\n      case 'dayNum':\n        formattedDate = dateMaker.dayNum;\n        break;\n\n      case 'month':\n        formattedDate = dateMaker.month;\n        break;\n\n      case 'year':\n        formattedDate = dateMaker.year;\n        break;\n\n      case 'hour':\n        formattedDate = dateMaker.hour;\n        break;\n\n      case 'minute':\n        formattedDate = dateMaker.minute;\n        break;\n\n      case 'localTime':\n        formattedDate = dateMaker.localTime;\n        break;\n\n      default:\n        break;\n    }\n\n    return formattedDate;\n  }\n\n  formatMapsUrl(address) {\n    let firstPart = 'https://www.google.com/maps/search/?api=1&query=';\n    let secondPart = encodeURIComponent(address);\n    return firstPart + secondPart;\n  }\n\n  render() {\n    const eventsList = this.state.calendarEvents.map((calEvent, i) => {\n      return __jsx(\"div\", {\n        key: i,\n        className: \"jsx-1188800844\" + \" \" + \"eventCard\"\n      }, __jsx(\"h3\", {\n        className: \"jsx-1188800844\"\n      }, calEvent.summary), __jsx(\"div\", {\n        className: \"jsx-1188800844\" + \" \" + \"detailsContainer\"\n      }, __jsx(\"div\", {\n        className: \"jsx-1188800844\" + \" \" + \"details\"\n      }, __jsx(\"div\", {\n        className: \"jsx-1188800844\" + \" \" + \"event\"\n      }, __jsx(\"img\", {\n        src: require('../public/time-icon-01.svg'),\n        className: \"jsx-1188800844\" + \" \" + \"icon\"\n      }), __jsx(\"p\", {\n        className: \"jsx-1188800844\" + \" \" + \"time\"\n      }, this.date(calEvent.start.dateTime, 'day'), \", \", this.date(calEvent.start.dateTime, 'month'), \" \", this.date(calEvent.start.dateTime, 'dayNum'), \"  \", this.date(calEvent.start.dateTime, 'localTime'), \" - \", this.date(calEvent.end.dateTime, 'localTime'))), __jsx(\"div\", {\n        className: \"jsx-1188800844\" + \" \" + \"event\"\n      }, __jsx(\"img\", {\n        src: require('../public/pin-icon-01.svg'),\n        className: \"jsx-1188800844\" + \" \" + \"icon\"\n      }), __jsx(\"p\", {\n        className: \"jsx-1188800844\" + \" \" + \"pin\"\n      }, calEvent.location)), __jsx(\"div\", {\n        className: \"jsx-1188800844\" + \" \" + \"event\"\n      }, __jsx(\"img\", {\n        src: require('../public/description-icon-01.svg'),\n        className: \"jsx-1188800844\" + \" \" + \"icon\"\n      }), __jsx(\"p\", {\n        className: \"jsx-1188800844\" + \" \" + \"description\"\n      }, calEvent.description)), __jsx(\"div\", {\n        className: \"jsx-1188800844\" + \" \" + \"buttons\"\n      }, __jsx(\"div\", {\n        className: \"jsx-1188800844\" + \" \" + \"event\"\n      }, __jsx(\"img\", {\n        src: require('../public/navigate-icon-01.svg'),\n        className: \"jsx-1188800844\" + \" \" + \"icon\"\n      }), __jsx(\"p\", {\n        className: \"jsx-1188800844\" + \" \" + \"navigate\"\n      }, __jsx(\"a\", {\n        alt: \"directions link\",\n        href: this.formatMapsUrl(calEvent.location),\n        className: \"jsx-1188800844\" + \" \" + \"directions\"\n      }, \"Navigate\"))), __jsx(\"div\", {\n        className: \"jsx-1188800844\" + \" \" + \"event\"\n      }, __jsx(\"img\", {\n        src: require('../public/calendar-icon-01.svg'),\n        className: \"jsx-1188800844\" + \" \" + \"icon\"\n      }), __jsx(\"p\", {\n        className: \"jsx-1188800844\" + \" \" + \"calendar\"\n      }, __jsx(\"a\", {\n        href: calEvent.htmlLink,\n        className: \"jsx-1188800844\" + \" \" + \"openInCalendar\"\n      }, \"Calendar\")))))), __jsx(_JSXStyle, {\n        id: \"1188800844\"\n      }, [\".eventCard.jsx-1188800844{padding:1rem;margin:2rem 0;text-align:left;}\", \".eventCard.jsx-1188800844:last-child{margin-bottom:0;}\", \".icon.jsx-1188800844{height:1.2rem;position:relative;top:3px;}\", \".event.jsx-1188800844{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}\", \".time.jsx-1188800844{margin-left:10px;}\", \".pin.jsx-1188800844{margin-left:6px;}\", \".description.jsx-1188800844{margin-left:9px;}\", \".calendar.jsx-1188800844{margin-left:10px;}\", \".navigate.jsx-1188800844{margin-left:9px;}\", \".buttons.jsx-1188800844{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin:1rem 0;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\", \".event.jsx-1188800844{width:100%;}\", \".buttons.jsx-1188800844 .event.jsx-1188800844:first-child{margin:0 0 1rem 0;}\", \".buttons.jsx-1188800844 .event.jsx-1188800844:last-child{margin:1rem 0 0 0;}\", \".buttons.jsx-1188800844:hover{cursor:pointer;}\", \".buttons.jsx-1188800844 .event.jsx-1188800844{width:100%;border:2px solid #fff;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:#f69d1a;-webkit-transition:background ease .5s;transition:background ease .5s;}\", \".buttons.jsx-1188800844 .event.jsx-1188800844:hover{background:#fff;}\", \".buttons.jsx-1188800844 .event.jsx-1188800844 .navigate.jsx-1188800844 .directions.jsx-1188800844,.buttons.jsx-1188800844 .event.jsx-1188800844 .calendar.jsx-1188800844 .openInCalendar.jsx-1188800844{color:#333;}\", \".buttons.jsx-1188800844 .icon.jsx-1188800844{top:0px;}\", \"@media only screen and (min-width:700px){.buttons.jsx-1188800844{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}.buttons.jsx-1188800844 .event.jsx-1188800844:first-child{margin:0 1rem 0 0;}.buttons.jsx-1188800844 .event.jsx-1188800844:last-child{margin:0 0 0 1rem;}}\"]));\n    });\n    return __jsx(StyleBase, null, __jsx(\"section\", {\n      className: \"calendarPageContainer\"\n    }, __jsx(\"div\", {\n      className: \"calendarPage\"\n    }, __jsx(\"div\", {\n      className: \"numOfEvents\"\n    }, __jsx(NumberOfEvents, {\n      events: this.state.calendarEvents.length,\n      error: this.state.fetchError\n    })), __jsx(\"div\", {\n      className: \"eventListContainer\"\n    }, eventsList))));\n  }\n\n}\n\nexport default Calendar;","map":null,"metadata":{},"sourceType":"module"}