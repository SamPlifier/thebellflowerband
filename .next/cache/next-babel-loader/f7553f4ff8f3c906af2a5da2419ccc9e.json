{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/sam.davis-castro/Desktop/bellflower-site-nextjs/components/EmailForm3.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nexport default (() => {\n  const {\n    0: status,\n    1: setStatus\n  } = useState({\n    submitted: false,\n    submitting: false,\n    info: {\n      error: false,\n      msg: null\n    }\n  });\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState({\n    email: '',\n    message: ''\n  });\n\n  const handleServerResponse = (ok, msg) => {\n    if (ok) {\n      setStatus({\n        submitted: true,\n        submitting: false,\n        info: {\n          error: false,\n          msg: msg\n        }\n      });\n      setInputs({\n        email: '',\n        message: ''\n      });\n    } else {\n      setStatus({\n        info: {\n          error: true,\n          msg: msg\n        }\n      });\n    }\n  };\n\n  const handleOnChange = e => {\n    e.persist();\n    setInputs(prev => _objectSpread({}, prev, {\n      [e.target.id]: e.target.value\n    }));\n    setStatus({\n      submitted: false,\n      submitting: false,\n      info: {\n        error: false,\n        msg: null\n      }\n    });\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    setStatus(prevStatus => _objectSpread({}, prevStatus, {\n      submitting: true\n    }));\n    axios({\n      method: 'POST',\n      url: 'https://formspree.io/mbjllqae',\n      data: inputs\n    }).then(response => {\n      handleServerResponse(true, 'Thank you, your message has been submitted.');\n    }).catch(error => {\n      handleServerResponse(false, error.response.data.error);\n    });\n  };\n\n  return __jsx(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"React and Formspree\"), __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(\"form\", {\n    onSubmit: handleOnSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Email\"), __jsx(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    name: \"_replyto\",\n    onChange: handleOnChange,\n    required: true,\n    value: inputs.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Message\"), __jsx(\"textarea\", {\n    id: \"message\",\n    name: \"message\",\n    onChange: handleOnChange,\n    required: true,\n    value: inputs.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: status.submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, !status.submitting ? !status.submitted ? 'Submit' : 'Submitted' : 'Submitting...')), status.info.error && __jsx(\"div\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Error: \", status.info.msg), !status.info.error && status.info.msg && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, status.info.msg));\n});","map":{"version":3,"sources":["/Users/sam.davis-castro/Desktop/bellflower-site-nextjs/components/EmailForm3.js"],"names":["React","useState","axios","status","setStatus","submitted","submitting","info","error","msg","inputs","setInputs","email","message","handleServerResponse","ok","handleOnChange","e","persist","prev","target","id","value","handleOnSubmit","preventDefault","prevStatus","method","url","data","then","response","catch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\n\nexport default () => {\n  const [status, setStatus] = useState({\n    submitted: false,\n    submitting: false,\n    info: { error: false, msg: null }\n  })\n  const [inputs, setInputs] = useState({\n    email: '',\n    message: ''\n  })\n  const handleServerResponse = (ok, msg) => {\n    if (ok) {\n      setStatus({\n        submitted: true,\n        submitting: false,\n        info: { error: false, msg: msg }\n      })\n      setInputs({\n        email: '',\n        message: ''\n      })\n    } else {\n      setStatus({\n        info: { error: true, msg: msg }\n      })\n    }\n  }\n  const handleOnChange = e => {\n    e.persist()\n    setInputs(prev => ({\n      ...prev,\n      [e.target.id]: e.target.value\n    }))\n    setStatus({\n      submitted: false,\n      submitting: false,\n      info: { error: false, msg: null }\n    })\n  }\n  const handleOnSubmit = e => {\n    e.preventDefault()\n    setStatus(prevStatus => ({ ...prevStatus, submitting: true }))\n    axios({\n      method: 'POST',\n      url: 'https://formspree.io/mbjllqae',\n      data: inputs\n    })\n      .then(response => {\n        handleServerResponse(\n          true,\n          'Thank you, your message has been submitted.'\n        )\n      })\n      .catch(error => {\n        handleServerResponse(false, error.response.data.error)\n      })\n  }\n  return (\n    <main>\n      <h1>React and Formspree</h1>\n      <hr />\n      <form onSubmit={handleOnSubmit}>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          name=\"_replyto\"\n          onChange={handleOnChange}\n          required\n          value={inputs.email}\n        />\n        <label htmlFor=\"message\">Message</label>\n        <textarea\n          id=\"message\"\n          name=\"message\"\n          onChange={handleOnChange}\n          required\n          value={inputs.message}\n        />\n        <button type=\"submit\" disabled={status.submitting}>\n          {!status.submitting\n            ? !status.submitted\n              ? 'Submit'\n              : 'Submitted'\n            : 'Submitting...'}\n        </button>\n      </form>\n      {status.info.error && (\n        <div className=\"error\">Error: {status.info.msg}</div>\n      )}\n      {!status.info.error && status.info.msg && <p>{status.info.msg}</p>}\n    </main>\n  )\n}"]},"metadata":{},"sourceType":"module"}