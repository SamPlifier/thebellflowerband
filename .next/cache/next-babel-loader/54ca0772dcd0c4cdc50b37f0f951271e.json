{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst EmailForm2 = () => {\n  const {\n    0: serverState,\n    1: setServerState\n  } = useState({\n    sending: false,\n    status: null\n  });\n  const {\n    0: fieldErrors,\n    1: setFieldErrors\n  } = useState({\n    email: null,\n    message: null\n  });\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState({\n    email: '',\n    message: ''\n  });\n  const validityRules = {\n    email: val => !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(val),\n    message: val => !val\n  };\n\n  const validate = () => {\n    let err = {\n      emailErr: validityRules.email(inputs.email),\n      msgErr: validityRules.message(inputs.message)\n    };\n    setFieldErrors(prev => _objectSpread({}, prev, {\n      email: err.emailErr,\n      message: err.msgErr\n    }));\n    let hasErrors = true;\n\n    if (!err.emailErr && !err.msgErr) {\n      hasErrors = false;\n    }\n\n    return hasErrors;\n  };\n\n  const renderErrors = field => {\n    if (fieldErrors[field]) {\n      if (field === 'email') {\n        return __jsx(\"p\", {\n          className: \"error\"\n        }, \"Please enter a valid email.\");\n      } else {\n        return __jsx(\"p\", {\n          className: \"error\"\n        }, \"Please add a message.\");\n      }\n    }\n  };\n\n  const handleOnChange = event => {\n    event.persist();\n    setInputs(prev => _objectSpread({}, prev, {\n      [event.target.id]: event.target.value\n    }));\n  };\n\n  const handleServerResponse = (ok, msg) => {\n    setServerState({\n      sending: false,\n      status: {\n        ok,\n        msg\n      }\n    });\n    console.log(msg);\n\n    if (ok) {\n      setFieldErrors({});\n      setInputs({\n        email: '',\n        message: ''\n      });\n    }\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      return;\n    }\n\n    setServerState({\n      sending: true\n    });\n    const form = e.target;\n    axios({\n      method: 'post',\n      url: 'https://formspree.io/mbjllqae',\n      data: new FormData(form)\n    }).then(resp => {\n      handleServerResponse(true, 'Message sent. Thanks!');\n    }).catch(resp => {\n      console.log(resp.response);\n      handleServerResponse(false, resp.response.data.error, form);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-3004960950\"\n  }, __jsx(\"h2\", {\n    className: \"jsx-3004960950\"\n  }, \"GET IN TOUCH\"), __jsx(\"form\", {\n    onSubmit: handleFormSubmit,\n    noValidate: true,\n    className: \"jsx-3004960950\"\n  }, serverState.status && __jsx(\"p\", {\n    className: \"jsx-3004960950\" + \" \" + ((!serverState.status.ok ? \"errorMsg\" : \"\") || \"\")\n  }, serverState.status.msg), __jsx(\"label\", {\n    htmlFor: \"email\",\n    className: \"jsx-3004960950\"\n  }, \"Email\"), __jsx(\"input\", {\n    value: inputs.email,\n    onChange: handleOnChange,\n    id: \"email\",\n    type: \"email\",\n    name: \"email\",\n    noValidate: true,\n    autoComplete: \"off\",\n    required: true,\n    className: \"jsx-3004960950\"\n  }), renderErrors(\"email\"), __jsx(\"label\", {\n    htmlFor: \"message\",\n    className: \"jsx-3004960950\"\n  }, \"Message\"), __jsx(\"textarea\", {\n    value: inputs.message,\n    onChange: handleOnChange,\n    id: \"message\",\n    type: \"text\",\n    name: \"message\",\n    rows: \"2\",\n    noValidate: true,\n    required: true,\n    className: \"jsx-3004960950\"\n  }), renderErrors('message'), __jsx(\"button\", {\n    type: \"submit\",\n    disable: serverState.sending.toString(),\n    className: \"jsx-3004960950\"\n  }, \"SEND\")), __jsx(_JSXStyle, {\n    id: \"3004960950\"\n  }, [\"form.jsx-3004960950{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-align-items:space-between;-webkit-box-align:space-between;-ms-flex-align:space-between;align-items:space-between;padding-bottom:1rem;}\", \"form.jsx-3004960950 label.jsx-3004960950{text-align:left;}\", \"label.jsx-3004960950,button.jsx-3004960950{margin-top:1rem;}\", \"input.jsx-3004960950,textarea.jsx-3004960950{margin-top:.5rem;}\", \"form.jsx-3004960950 textarea.jsx-3004960950{resize:vertical;}\", \"button.jsx-3004960950{color:#fff;margin-top:2rem;background:#d81e5b;padding:1rem 1.5rem;border:2px solid #fff;}\"]));\n};\n\nexport default EmailForm2;","map":null,"metadata":{},"sourceType":"module"}