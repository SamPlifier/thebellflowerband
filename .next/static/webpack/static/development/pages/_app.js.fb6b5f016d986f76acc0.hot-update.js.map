{"version":3,"file":"static/webpack/static/development/pages/_app.js.fb6b5f016d986f76acc0.hot-update.js","sources":["webpack:///./components/EmailForm.js","webpack:///./components/Footer.js"],"sourcesContent":["import React from \"react\";\n// import EmailForm2 from \"./EmailForm2\";\n\n\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n    // add function to check form validation, if all clear, then send\n  }\n  \n  \n  render() {\n    const { status } = this.state;\n    return (\n      <div>\n        <h2>DROP US A LINE?</h2>\n        <form\n          // call validation function first\n          onSubmit={this.submitForm}\n          action=\"https://formspree.io/mbjllqae\"\n          method=\"POST\"\n        >\n          <label>Email</label>\n          <input type=\"email\" name=\"email\" />\n          <label>Message</label>\n          <textarea type=\"text\" name=\"message\" />\n          {status === \"SUCCESS\" ? <p>Thanks!</p> : <button>SUBMIT</button>}\n          {status === \"ERROR\" && <p>Oops, tech fail. Try emailing us at thebellflowerband@gmail.com</p>}\n          <style jsx>{`\n            form {\n              display: flex;\n              flex-direction: column;\n              justify-content: flex-start;\n              align-items: space-between;\n              padding-bottom: 1rem;\n            }\n            form label {\n              text-align: left;\n            }\n            label, button {\n              margin-top: 1rem;\n            }\n            button {\n              margin-top: 2rem;\n            }\n            input, textarea {\n              margin-top: .5rem;\n            }\n            form textarea {\n              resize: vertical;\n            }\n            button {\n              color: #fff;\n              background: #d81e5b;\n              padding: 1rem 1.5rem;\n              border: 2px solid #fff;\n          }\n          `}</style>\n        </form>\n      </div>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}\n\n// export default MyForm;","import StyleBase from '../components/StyleBase';\nimport EmailForm2 from '../components/EmailForm2';\nimport MyForm from '../components/EmailForm';\nimport Map from '../components/Map';\n\nconst Footer = () => {\n    \n    return (\n        <StyleBase>\n            <section className=\"footer\">\n                {/* <EmailForm2 /> */}\n                <MyForm />\n                <Map/>\n                <div className=\"socialIcons\">\n                    <img src={require('../public/social_icons/facebook.svg')} />\n                    <img src={require('../public/social_icons/twitter.svg')} />\n                    <img src={require('../public/social_icons/youtube.svg')} />\n                </div>\n            </section>\n        <style jsx>{`\n        .footer {\n            border-top: 2px solid #fff;\n        }\n        .socialIcons {\n            margin: 1rem 0;\n            display: flex;\n            justify-content: space-around;\n        }\n        .socialIcons img {\n            height: 100%;\n            max-width: 50px;\n        }\n        #map {\n            height: 300px;\n            width: 100%;\n          }\n          .socialIcons {\n              filter: invert(100%);\n              height: 50px;\n          }\n        `}</style>\n        </StyleBase>\n    )\n}\n\nexport default Footer;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAJA;AAOA;AACA;;;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AA6CA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;AAhFA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAmCA;AACA;AACA;;;;A","sourceRoot":""}