{"version":3,"file":"static/development/pages/album/[albumName].js","sources":["webpack:///webpack/bootstrap","webpack:///./components/AlbumVendors.js","webpack:///./components/StyleBase.js","webpack:///./components/ViewAlbumSides.js","webpack:///./pages/album/[albumName].js","webpack:///./public/albumInfo.js","webpack:///./public/albums sync ^\\.\\/.*\\/album\\-.*\\.png$","webpack:///./public/albums/changes-on-the-way/album-back.png","webpack:///./public/albums/changes-on-the-way/album-front.png","webpack:///./public/albums/changes-on-the-way/album-left.png","webpack:///./public/albums/changes-on-the-way/album-right.png","webpack:///external \"react\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","const AlbumVendors = (props) => {\n    console.log(props.vendor);\n    \n    return (\n        <div>\n        <h2>PURCHASE ON</h2>\n        <div className=\"vendors\">\n            {props.vendor.map(vendor => {\n                return (\n                <a key={vendor.vendorName} className=\"vendor\" href={vendor.vendorLink}>{vendor.vendorName}</a>\n                )\n            })}\n        <style jsx>{`\n        .vendors {\n            width: 100%;\n            display: grid;\n            grid-template-areas: \"topLeft topRight\"\n                         \"bottomLeft bottomRight\";\n            grid-template-rows: auto;\n            grid-template-columns: 1fr 1fr;\n            grid-row-gap: 2rem;\n            grid-column-gap: 2rem;\n            margin: 2rem 0;\n        }\n        .vendor {\n            border: 2px solid #f69d1a;\n            padding: 1rem;\n            text-align: center;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 2rem;\n            background: #f69d1a;\n            color: #222;\n        }\n        `}</style>\n        <style jsx global>{`\n            .vendorAvail {\n                text-align: center;\n            }\n        `}</style>\n        </div>\n        </div>\n    )\n}\n\nexport default AlbumVendors;","const StyleBase = (props) => {\n    return (\n        <div className=\"page-layout\">\n            { props.children }\n            <style jsx global>{`\n                @import url('https://fonts.googleapis.com/css?family=Noto+Serif+TC:300|BenchNine:300&display=swap');\n                html, body {\n                    margin: 0;\n                    padding: 0;\n                    text-align: center;\n                    background: #333;\n                }\n                h1, h2, h3, h4, h5, h6 {\n                    font-family: 'BenchNine', sans-serif;\n                    font-weight: 300;\n                    color: #fff;\n                    font-size: 2.4rem;\n                    text-align: center;\n                }\n                a, p, li, button, ul, ol, div, label {\n                    font-family: 'Open Sans', sans-serif;\n                    font-size: 1.2rem;\n                    color: #fff;\n                }\n                input, textarea {\n                    font-family: 'Open Sans', sans-serif;\n                    font-size: 1.2rem;\n                    color: #222;\n                  }\n                ul, ol {\n                    list-style-type: none;\n                    margin: 0;\n                    padding: 0;\n                }\n                a {\n                    text-decoration: none;\n                }\n                section {\n                    padding: 1rem;\n                    box-sizing: border-box;\n                }\n                .page-layout {\n                    margin-top: 50px;\n                }\n                .map {\n                    background: \n                }\n\n            `}</style>\n        </div>\n    )\n}\n\nexport default StyleBase;","import { useState } from 'react';\nimport StyleBase from '../components/StyleBase';\n\n\nconst ViewAlbumSides = (props) => {\n    let album = props.album;\n    const [inView, setInView] = useState('front');\n    const updateInView = (view) => {\n            setInView(view);\n            document.getElementsByClassName(view)[0].classList.add('active');\n    }\n    return (\n        <StyleBase>\n            <section>\n                <div className=\"album-container\">\n                <img src=\"\"/>\n                <img className=\"icon\" src={require(`../public/albums/${album}/album-${inView}.png`)} />\n                    <div className=\"album-controls\">\n                        <button className={`front ${inView === 'front' ? 'active' : ''}`} onClick={() => {updateInView('front')}}>Front<br/>Cover</button>\n                        <button className={`back ${inView === 'back' ? 'active' : ''}`} onClick={() => {updateInView('back')}}>Back<br/>Cover</button>\n                        <button className={`left ${inView === 'left' ? 'active' : ''}`} onClick={() => {updateInView('left')}}>Inside<br/>Left</button>\n                        <button className={`right ${inView === 'right' ? 'active' : ''}`} onClick={() => {updateInView('right')}}>Inside<br/>Right</button>\n                    </div>\n                </div>\n            </section>\n            <style jsx>{`\n            .album-controls {\n                display: grid;\n                grid-template-areas: \"front back\"\n                             \"left right\";\n                grid-template-rows: \"3rem 3rem\";\n                grid-template-columns: \"50% 50%\";\n                grid-row-gap: 2rem;\n                grid-column-gap: 2rem;\n                margin: 2rem 0;\n            }\n            .album-controls button {\n                background: transparent;\n                border: none;\n            }\n            .active {\n                color: #f69d1a;\n            }\n            .front {\n                grid-area: front;\n            }\n            .back {\n                grid-area: back;\n            }\n            .left {\n                grid-area: left;\n            }\n            .right {\n                grid-area: right;\n            }\n            .album-container {\n \n            }\n            img {\n                width: 100%;\n            }\n            `}</style>\n        </StyleBase>\n    )\n}\n\nexport default ViewAlbumSides;","import StyleBase from '../../components/StyleBase';\nimport ViewAlbumSides from '../../components/ViewAlbumSides';\nimport albumInfo from '../../public/albumInfo.js';\nimport AlbumVendors from '../../components/AlbumVendors';\n\nconst Album = () => {\n    return (\n        <StyleBase>\n            <section>\n                <div className=\"albums\">\n                {albumInfo.map((album, i) => {\n                    return (\n                        <div key={i}>\n                            <AlbumVendors vendor={album.vendors}/>\n                            <h2>INFO</h2>\n                        <p className=\"detail\">Album Name<br/><span>{album.name}</span></p>\n                        <p className=\"detail\">Release Date<br/><span>{album.releaseDate}</span></p>\n                        <p className=\"detail\">Composers<br/><span>{album.writers.map((writer, j) => {\n                            if (j+1 < album.writers.length) {\n                                return <span key={j}>{`${writer}, `}</span>\n                            } else {\n                                return <span key={j}>{writer}</span>\n                            }\n                        })}</span>\n                        </p>\n                        <p className=\"detail\">Song Number<br/><span>{album.songs}</span></p>\n                        <div className=\"detail\">Song Names<br/><span>{album.songNames.map((song, k) => {\n                            return <div key={k}><span>{song}</span><br/></div>\n                        })}</span></div>\n                        <h2>ART</h2>\n                        <ViewAlbumSides album={album.name.toLowerCase().split(' ').join('-')}/>\n                    </div>\n                )\n                })}\n                </div>\n            </section>\n            <style jsx>{`\n\n            .album-vendors {\n                display: grid;\n                grid-template-areas: \"iTunes googlePlay\"\n                             \"amazonPrime cdBaby\";\n                grid-template-rows: \"3rem 3rem\";\n                grid-template-columns: \"50% 50%\";\n                grid-row-gap: 2rem;\n                margin: 2rem 0;\n            }\n            .albums {\n                text-align: left;\n            }\n            .detail {\n                color: #f29a2f;\n            }\n            .detail span {\n                color: #fff;\n            }\n            `}</style>\n        </StyleBase>\n    )\n}\n\nexport default Album;","const albums = [\n    {\n        \"item\": \"Bellflower album\",\n        \"name\": \"Changes On The Way\",\n        \"urlName\": \"changes-on-the-way\",\n        \"albumImages\": \"public/changes-on-the-way\",\n        \"releaseDate\":\"September 30, 2019\",\n        \"writers\":[\"Franklin Bellflower\", \"Natasha Wilson\", \"David Criswell\"],\n        \"songs\":\"10\",\n        \"price\":\"$10\",\n        \"songNames\": [\"Changes on the Way\", \"Feeling You\", \"Blowing the Wind\", \"Looking for the One\", \"Candy Crunch\", \"Kind of Like Jolene\", \"Bradford Pear\", \"Fire to the Feast\", \"What Is Love\", \"To the End\"],\n        \"vendors\": [{\"vendorName\":\"iTunes\",\"vendorLink\": \"https://music.apple.com/us/album/changes-on-the-way/1480122305\"},          \n                    {\"vendorName\":\"CD Baby\",\"vendorLink\": \"https://store.cdbaby.com/cd/bellflower\"},\n                    {\"vendorName\":\"Google Play\",\"vendorLink\": \"https://play.google.com/store/music/album/Bellflower_Changes_on_the_Way?id=Bix7j567nfnaili7n6utbonfe34\"},\n                    {\"vendorName\":\"Amazon Prime\",\"vendorLink\": \"https://www.amazon.com/Changes-Way-Bellflower/dp/B07XLXV6W8\"}\n                ]\n    }\n]\n\nexport default albums;","var map = {\n\t\"./changes-on-the-way/album-back.png\": \"./public/albums/changes-on-the-way/album-back.png\",\n\t\"./changes-on-the-way/album-front.png\": \"./public/albums/changes-on-the-way/album-front.png\",\n\t\"./changes-on-the-way/album-left.png\": \"./public/albums/changes-on-the-way/album-left.png\",\n\t\"./changes-on-the-way/album-right.png\": \"./public/albums/changes-on-the-way/album-right.png\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./public/albums sync recursive ^\\\\.\\\\/.*\\\\/album\\\\-.*\\\\.png$\";","module.exports = \"/_next/static/images/album-back-ef1cebf1fd3c97db83d9bc82f5bdabdb.png\";","module.exports = \"/_next/static/images/album-front-e7c1f2a4a62f97b3fe42cdd82d0d2ab1.png\";","module.exports = \"/_next/static/images/album-left-fc2498305cc6481515616e114b7c5c9d.png\";","module.exports = \"/_next/static/images/album-right-9b7c7940185dfb61ac901a57a1f75b87.png\";","module.exports = require(\"react\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsCA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiDA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACroDA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACloDA;AACA;AACA;;;;;;;;;;;;AC7DA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAbA;AAkBA;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}